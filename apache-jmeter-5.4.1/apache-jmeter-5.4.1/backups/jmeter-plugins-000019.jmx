<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.ChromeDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig" testname="jp@gc - Chrome Driver Config" enabled="true">
          <boolProp name="WebDriverConfig.acceptinsecurecerts">false</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">false</boolProp>
          <stringProp name="WebDriverConfig.driver_path">C:\WebDrivers\chromedriver.exe</stringProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <boolProp name="WebDriverConfig.headless">false</boolProp>
          <boolProp name="WebDriverConfig.maximize_browser">true</boolProp>
          <stringProp name="ChromeDriverConfig.additional_args"></stringProp>
          <stringProp name="ChromeDriverConfig.binary_path"></stringProp>
          <stringProp name="WebDriverConfig.proxy_type">SYSTEM</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host"></stringProp>
          <intProp name="WebDriverConfig.http_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">true</boolProp>
          <stringProp name="WebDriverConfig.https_host"></stringProp>
          <intProp name="WebDriverConfig.https_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_ftp_proxy">true</boolProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_socks_proxy">true</boolProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">8080</intProp>
          <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
          <stringProp name="WebDriverConfig.custom_capabilites"></stringProp>
        </com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Launch_Page" enabled="true">
          <stringProp name="WebDriverSampler.script">WDS.browser.get(&quot;https://opensource-demo.orangehrmlive.com/web/index.php/auth/login&quot;);
WDS.log.info(&quot;‚úÖ Opened Login Page&quot;);

WDS.sampleResult.setResponseData(&quot;‚úÖ Opened Login Page&quot;, &quot;UTF-8&quot;);
WDS.sampleResult.setSuccessful(true);
</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Login_Page" enabled="true">
          <stringProp name="WebDriverSampler.script">// üí° Required Java imports for explicit waits
import org.openqa.selenium.By;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.support.ui.ExpectedConditions;
import java.time.Duration;

// Start test
WDS.sampleResult.sampleStart();

// Create wait instance
def wait = new WebDriverWait(WDS.browser, Duration.ofSeconds(15));

// Wait for username field
wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;)));

// Fill login fields
WDS.browser.findElement(By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;)).sendKeys(&quot;Admin&quot;);
WDS.browser.findElement(By.xpath(&quot;//input[@placeholder=&apos;Password&apos;]&quot;)).sendKeys(&quot;admin123&quot;);
WDS.browser.findElement(By.xpath(&quot;//button[@type=&apos;submit&apos;]&quot;)).click();

// Confirm login by waiting for profile icon
wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//p[@class=&apos;oxd-userdropdown-name&apos;]&quot;)));
// üí° Wait for this menu item to be visible
wait.until(ExpectedConditions.visibilityOfElementLocated(
    By.xpath(&quot;//a[@class=&apos;oxd-main-menu-item active&apos;]//span[1]&quot;)
));
// Done
WDS.sampleResult.sampleEnd();
WDS.sampleResult.setSuccessful(true);
</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Admin_Page" enabled="true">
          <stringProp name="WebDriverSampler.script">WDS.log.info(&quot;üîê Filling login form&quot;);

var By = org.openqa.selenium.By;
var Duration = java.time.Duration;
var wait = new org.openqa.selenium.support.ui.WebDriverWait(WDS.browser, Duration.ofSeconds(10));
var ExpectedConditions = org.openqa.selenium.support.ui.ExpectedConditions;

// Wait and enter username
wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;))).sendKeys(&quot;Admin&quot;);

// Wait and enter password
wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(&quot;//input[@placeholder=&apos;Password&apos;]&quot;))).sendKeys(&quot;admin123&quot;);

// Click Login button
wait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//button[@type=&apos;submit&apos;]&quot;))).click();

// üîÑ Post-login: wait for dashboard/menu to load and click the sidebar item
wait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a[@class=&apos;oxd-main-menu-item active&apos;]//span[1]&quot;))).click();

WDS.log.info(&quot;‚úÖ Login and post-login navigation successful&quot;);

WDS.sampleResult.setResponseData(&quot;‚úÖ Login and dashboard menu clicked&quot;, &quot;UTF-8&quot;);
WDS.sampleResult.setSuccessful(true);
java.lang.Thread.sleep(5000);</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Logout_Page" enabled="true">
          <stringProp name="WebDriverSampler.script">WDS.log.info(&quot;üö™ Logging out...&quot;);

var By = org.openqa.selenium.By;
var Duration = java.time.Duration;
var wait = new org.openqa.selenium.support.ui.WebDriverWait(WDS.browser, Duration.ofSeconds(10));
var ExpectedConditions = org.openqa.selenium.support.ui.ExpectedConditions;

// Click profile dropdown
wait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//p[@class=&apos;oxd-userdropdown-name&apos;]&quot;))).click();

// Click Logout
wait.until(ExpectedConditions.elementToBeClickable(By.xpath(&quot;//a[normalize-space()=&apos;Logout&apos;]&quot;))).click();

WDS.log.info(&quot;‚úÖ Logout successful&quot;);

// Wait for 10 seconds
java.lang.Thread.sleep(5000);

WDS.sampleResult.setResponseData(&quot;‚úÖ Logout done&quot;, &quot;UTF-8&quot;);
WDS.sampleResult.setSuccessful(true);
</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">groovy</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
